---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &secretName authentik-secret
  namespace: security
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: *secretName
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        AUTHENTIK_STORAGE__MEDIA__BACKEND: "s3"
        AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY: "{{ .AWS_ACCESS_KEY }}"
        AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY: "{{ .AWS_SECRET_KEY }}"
        AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME: "zocimek-hl-authentik"
        AUTHENTIK_STORAGE__MEDIA__S3__REGION: "{{ .AWS_REGION }}"
        AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT: "https://{{ .AWS_ENDPOINT }}"
        AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN: "{{ .AWS_ENDPOINT }}"

        AUTHENTIK_BOOTSTRAP_EMAIL: "{{ .authentik_bootstrap_email }}"
        AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ .authentik_bootstrap_password }}"
        AUTHENTIK_BOOTSTRAP_TOKEN: "{{ .authentik_bootstrap_token }}"
        AUTHENTIK_SECRET_KEY: "{{ .authentik_secret_key }}"

        AUTHENTIK_EMAIL__HOST: "smtp-relay.default.svc.cluster.local"
        AUTHENTIK_EMAIL__PORT: "25"
        # AUTHENTIK_EMAIL__USERNAME: "{{ .authentik_EMAIL_USER }}"
        # AUTHENTIK_EMAIL__PASSWORD: "{{ .authentik_EMAIL_PASSWORD }}"
        AUTHENTIK_EMAIL__USE_TLS: "false"
        AUTHENTIK_EMAIL__USE_SSL: "false"
        AUTHENTIK_EMAIL__FROM: "Authentik <no-reply@pospiech.dev>"

  dataFrom:
    - extract:
        key: authentik
    - extract:
        key: s3
    - extract:
        key: smtp

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &secretName authentik-db-secret
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: *secretName
    template:
      type: Opaque
      data:
        AUTHENTIK_POSTGRESQL__NAME: '{{ index . "dbname" }}'
        AUTHENTIK_POSTGRESQL__HOST: '{{ index . "host" }}'
        AUTHENTIK_POSTGRESQL__USER: '{{ index . "user" }}'
        AUTHENTIK_POSTGRESQL__PASSWORD: '{{ index . "password" }}'
  dataFrom:
    - extract:
        key: postgres-pguser-authentik


---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &secretName authentik-tokens
  namespace: security
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: *secretName
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        AUTHENTIK_TOKEN_LDAP: '{{ .ldap_token }}'

  dataFrom:
    - extract:
        key: authentik