---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres
  labels:
    crunchy-users.henrywhitaker3.github.com/watch: "true"
  annotations:
    crunchy-users.henrywhitaker3.github.com/superuser: "postgres"
    crunchy-users.henrywhitaker3.github.com/extensions: |
      [
        {
          "database": "immich",
          "extension": "vchord"
        },
        {
          "database": "immich",
          "extension": "earthdistance",
          "cascade": true
        }
      ]
spec:
  postgresVersion: 16

  # https://github.com/chkpwd/cdpgvecto.rs/pkgs/container/cdpgvecto.rs
  # https://github.com/1Solon/Home-Server-Configuration/blob/main/kubernetes/infra/databases/postgres/clusters/vector-cluster.yaml
  image: ghcr.io/drag0n141/cdpgvectorchord:0.4.2@sha256:76586888ced37296509120e10bbf7f0cd04f5ca23dd418915fe5284d3585bc05

  service:
    type: LoadBalancer
    metadata:
      annotations:
        external-dns.alpha.kubernetes.io/hostname: postgres.pospiech.dev
        lbipam.cilium.io/ips: 10.0.42.115

  patroni:  # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        synchronous_commit: "on"
        # remove below shared libraries during major upgrades
        parameters:
          max_connections: 500
          shared_preload_libraries: "vchord.so"
          search_path: '"$user", public, vectors"'

        pg_hba:
          - hostnossl all all 10.42.0.0/16 md5  # Needed because dbman does not support SSL yet
          - hostssl all all all md5

  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replica 2
      dataVolumeClaimSpec:
        storageClassName: ceph-block
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres

  users:
    # Superuser
    - name: postgres
      databases:
        - postgres
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    - name: atuin
      databases:
        - atuin
    - name: authentik
      databases:
        - authentik
      password:
        type: AlphaNumeric
    - name: gatus
      databases:
        - gatus
      password:
        type: AlphaNumeric
    - name: gitea
      databases:
        - gitea
      password:
        type: AlphaNumeric
    - name: hass-db
      databases:
        - hass-db
      password:
        type: AlphaNumeric
    - name: immich
      databases:
        - immich
      options: SUPERUSER
      password:
        type: AlphaNumeric
    - name: outline
      databases:
        - outline
      password:
        type: AlphaNumeric
    - name: paperless
      databases:
        - paperless
      password:
        type: AlphaNumeric
    - name: pmapp
      databases:
        - pmapp
      password:
        type: AlphaNumeric
    - name: shlink
      databases:
        - shlink
      password:
        type: AlphaNumeric
    - name: synapse
      databases:
        - synapse
      password:
        type: AlphaNumeric
    - name: umami
      databases:
        - umami
      password:
        type: AlphaNumeric
    - name: vaultwarden
      databases:
        - vaultwarden
      password:
        type: AlphaNumeric
    - name: whisparr
      databases:
        - whisparr
        - whisparr-logs
      password:
        type: AlphaNumeric

  backups:
    pgbackrest:
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.52.1-1
      configuration: &backupConfig
        - secret:
            name: crunchy-postgres-secret
      global: &backupFlag
        archive-get-queue-max: 4GiB
        archive-push-queue-max: 4GiB
        buffer-size: 16MiB
        log-level-file: detail
        process-max: "40"
        archive-timeout: "600"
        compress-type: "bz2"
        compress-level: "9"
        delta: "y"

        repo1-retention-full-type: "time"
        repo1-retention-full: "30"
        repo1-retention-diff: "90"
        repo1-path: "/crunchy-pgo"
        repo1-s3-uri-style: path

        repo2-retention-full-type: "time"
        repo2-retention-full: "7"
        repo2-path: "/crunchy-pgo"
        repo2-s3-uri-style: path

        start-fast: "y"
        # repo2-bundle: "y"
        # repo2-block: "y"
        # repo2-path: "/crunchy-pgo"
        # repo2-s3-uri-style: "path"
        # repo2-retention-full-type: "time"
        # repo2-retention-full: "2"
        # repo2-retention-diff: "7"
        # repo2-cipher-type: "aes-256-cbc"
      # manual:
      #   repoName: repo1
      #   options:
      #     - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1  # Minio
          s3: &minio
            bucket: "hl-backup"
            endpoint: "nas01.pospiech.dev:9000"
            region: "us-east-1"
          schedules:
            full: "0 1 * * 0"  # Sunday at 01:00
            differential: "0 1 * * 1-6"  # Mon-Sat at 01:00
            incremental: "0 2-23 * * *"  # Every hour except 01:00

        - name: repo2  # B2
          s3: &b2
            bucket: "zocimek-hl-pg-backup"
            endpoint: "s3.us-west-001.backblazeb2.com"
            region: "us-west-001"
          schedules:
            full: "0 2 * * 0"  # Sunday at 02:00
            incremental: "0 2 * * 1-6/2"  # Mon-Sat at 02:00, every 2nd day

  dataSource:
    pgbackrest:
      stanza: "db"
      configuration: *backupConfig
      global: *backupFlag
      repo:
        name: "repo1"
        s3: *minio
      options:
        - --type=immediate
      # options:
      #   - --set=20250617-085218F_20250619-210002I

  proxy:
    pgBouncer:
      port: 5432
      replicas: *replica
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-pgbouncer
      config:
        global:
          pool_mode: "transaction" # pgBouncer is set to transaction for Authentik. Grafana requires session https://github.com/grafana/grafana/issues/74260#issuecomment-1702795311. Everything else is happy with transaction
          client_tls_sslmode: prefer
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: "pgbouncer"