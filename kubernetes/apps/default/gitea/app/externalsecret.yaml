---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &secretName gitea-db-secret
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: *secretName
    template:
      type: Opaque
      data:
        database: |
            DB_TYPE=postgres
            HOST={{ index . "host" }}
            USER={{ index . "user" }}
            PASSWD={{ index . "password" }}
            NAME={{ index . "dbname" }}
  dataFrom:
    - extract:
        key: postgres-pguser-gitea

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name "gitea-admin-secret"
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: *name
    template:
      engineVersion: v2
      type: Opaque
      data:
        username: "{{ .ADMIN_USERNAME }}"
        password: "{{ .ADMIN_PASSWORD }}"
        email: "{{ .ADMIN_EMAIL }}"
        must-change-password: "false"
  dataFrom:
    - extract:
        key: gitea

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name "gitea-oauth"
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: *name
    template:
      engineVersion: v2
      type: Opaque
      data:
        key: gitea
        secret: "{{ .GITEA_CLIENT_SECRET }}"
  dataFrom:
    - extract:
        key: oauth

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name "gitea-tls2"
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: *name
    template:
      engineVersion: v2
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ .TLS_CRT }}"
        tls.key: "{{ .TLS_KEY }}"
  dataFrom:
    - extract:
        key: pospiech-dev-tls
        decodingStrategy: Base64
      rewrite:
        - regexp:
            source: "(.*).crt"
            target: "TLS_CRT"
        - regexp:
            source: "(.*).key"
            target: "TLS_KEY"