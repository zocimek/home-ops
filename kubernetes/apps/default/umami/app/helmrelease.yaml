---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app umami
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    controllers:
      umami:
        annotations:
          reloader.stakater.com/search: "true"
        strategy: Recreate
        containers:
          app:
            image:
              repository: ghcr.io/umami-software/umami
              tag: postgresql-v2.13.2

            env:
              TZ: Europe/Warsaw
              DATABASE_TYPE: postgresql
              DISABLE_TELEMETRY: "true"

            envFrom:
              - secretRef:
                  name: umami-db-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/heartbeat
                    port: &port 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 15m
                memory: 300Mi
              limits:
                memory: 500Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsGroup: 65534
        runAsUser: 65534
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault

    service:
      app:
        controller: *app
        ports:
          http:
            port: 3000

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.pospiech.dev"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port

    persistence:
      tmp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp
